!function(t,s){if("object"==typeof module&&module.exports)module.exports=s();else{var i=s();t.Vrex=i,t.Path2D=i}}(window||Window||root,function(){class t extends Path2D{constructor(){super(),this.pathData="",this.currentX=null,this.currentY=null,this.lastCmd=""}_updatePoint(t,s,i){this.currentX=t,this.currentY=s,this.lastCmd=i}moveTo(t,s){super.moveTo(t,s),this.pathData+=`M${t} ${s} `,this._updatePoint(t,s,"M")}lineTo(t,s){super.lineTo(t,s),this.pathData+=`L${t} ${s} `,this._updatePoint(t,s,"L")}closePath(){super.closePath(),this.pathData+="Z ",this.currentX=this.currentY=null,this.lastCmd="Z"}arc(t,s,i,a,r,e){super.arc(t,s,i,a,r,e);let h=t+i*Math.cos(a),n=s+i*Math.sin(a),l=t+i*Math.cos(r),u=s+i*Math.sin(r),o=r-a;!e&&o<0&&(o+=2*Math.PI),e&&o>0&&(o-=2*Math.PI);let p=Math.abs(o)>Math.PI?1:0;null===this.currentX||"Z"===this.lastCmd?this.pathData+=`M${h} ${n} `:Math.hypot(this.currentX-h,this.currentY-n)>1e-6&&(this.pathData+=`L${h} ${n} `),this.pathData+=`A${i} ${i} 0 ${p} ${e?0:1} ${l} ${u} `,this._updatePoint(l,u,"A")}arcTo(t,s,i,a,r){if(super.arcTo(t,s,i,a,r),null===this.currentX||null===this.currentY){this.moveTo(t,s),this.lineTo(i,a);return}let e=this.currentX,h=this.currentY,n=e-t,l=h-s,u=i-t,o=a-s,p=Math.hypot(n,l),c=Math.hypot(u,o);if(0===p||0===c||0===r){this.lineTo(t,s);return}let $=n/p,b=l/p,d=u/c,D=o/c,P=Math.acos(Math.min(1,Math.max(-1,$*d+b*D)));if(0===P){this.lineTo(t,s);return}let T=r/Math.tan(P/2);if(T>p||T>c){this.lineTo(t,s);return}let m=t+d*T,_=s+D*T;this.lineTo(t+$*T,s+b*T),this.pathData+=`A${r} ${r} 0 0 ${$*D-b*d<0?1:0} ${m} ${_} `,this._updatePoint(m,_,"A")}bezierCurveTo(t,s,i,a,r,e){super.bezierCurveTo(t,s,i,a,r,e),this.pathData+=`C${t} ${s} ${i} ${a} ${r} ${e} `,this._updatePoint(r,e,"C")}quadraticCurveTo(t,s,i,a){super.quadraticCurveTo(t,s,i,a),this.pathData+=`Q${t} ${s} ${i} ${a} `,this._updatePoint(i,a,"Q")}rect(t,s,i,a){super.rect(t,s,i,a),this.pathData+=`M${t} ${s} L${t+i} ${s} L${t+i} ${s+a} L${t} ${s+a} Z `,this.currentX=this.currentY=null,this.lastCmd="Z"}roundRect(t,s,i,a,r){super.roundRect(t,s,i,a,r),r="number"==typeof r?{tl:r,tr:r,br:r,bl:r}:Object.assign({tl:0,tr:0,br:0,bl:0},r);let e=Math.min(i,a)/2;r.tl=Math.min(r.tl,e),r.tr=Math.min(r.tr,e),r.br=Math.min(r.br,e),r.bl=Math.min(r.bl,e),this.moveTo(t+r.tl,s),this.lineTo(t+i-r.tr,s),r.tr>0&&(this.pathData+=`A${r.tr} ${r.tr} 0 0 1 ${t+i} ${s+r.tr} `),this.lineTo(t+i,s+a-r.br),r.br>0&&(this.pathData+=`A${r.br} ${r.br} 0 0 1 ${t+i-r.br} ${s+a} `),this.lineTo(t+r.bl,s+a),r.bl>0&&(this.pathData+=`A${r.bl} ${r.bl} 0 0 1 ${t} ${s+a-r.bl} `),this.lineTo(t,s+r.tl),r.tl>0&&(this.pathData+=`A${r.tl} ${r.tl} 0 0 1 ${t+r.tl} ${s} `),this.closePath()}ellipse(t,s,i,a,r,e,h,n){super.ellipse(t,s,i,a,r,e,h,n);let l=Math.cos(r),u=Math.sin(r),o=t+i*Math.cos(e)*l-a*Math.sin(e)*u,p=s+i*Math.cos(e)*u+a*Math.sin(e)*l,c=t+i*Math.cos(h)*l-a*Math.sin(h)*u,$=s+i*Math.cos(h)*u+a*Math.sin(h)*l,b=h-e;!n&&b<0&&(b+=2*Math.PI),n&&b>0&&(b-=2*Math.PI);let d=Math.abs(b)>Math.PI?1:0;null===this.currentX||"Z"===this.lastCmd?this.pathData+=`M${o} ${p} `:Math.hypot(this.currentX-o,this.currentY-p)>1e-6&&(this.pathData+=`L${o} ${p} `),this.pathData+=`A${i} ${a} ${180*r/Math.PI} ${d} ${n?0:1} ${c} ${$} `,this._updatePoint(c,$,"A")}addPath(t,s){super.addPath(t,s),this.pathData+=t.toPathData()}toPathData(){return this.pathData.trim()}}return t});
